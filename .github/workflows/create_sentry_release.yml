name: Create Sentry release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - uses: actions/checkout@v2
      - uses: EgorDm/gha-yarn-node-cache@v1

      - name: Install dependencies
        run: yarn install --prod

      - name: Set SHA
        id: commit-sha
        run: |
          if ${{ github.ref == 'refs/heads/main' }};
            then echo "::set-output name=sha::${{ github.sha }}";
            else echo "::set-output name=sha::${{ github.event.pull_request.head.sha }}";
          fi;

      - name: Build application
        run: yarn build
        env:
          REACT_APP_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          COMMIT_REF: ${{ steps.commit-sha.outputs.sha }}
          REACT_APP_OAUTH2_CLIENT_ID: ${{ secrets.CLIENT_ID }}

      - name: Create Sentry release (production)
        if: github.ref == 'refs/heads/main'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: python-discord
          SENTRY_PROJECT: forms-frontend
        with:
          environment: production
          sourcemaps: './build'
          version_prefix: forms-frontend@

      - name: Create Sentry release (deploy preview)
        if: github.ref != 'refs/heads/main'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: python-discord
          SENTRY_PROJECT: forms-frontend
        with:
          environment: deploy-preview
          sourcemaps: './build'
          version_prefix: forms-frontend@
